{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "file = open(\"message_1.json\", 'r')\n",
    "chat_history = json.load(file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'participants': [{'name': 'Vaughn Parker'}, {'name': 'Araaish Paul'}],\n",
       " 'messages': [{'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578255103885,\n",
       "   'content': 'Not personally',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578255100022,\n",
       "   'content': 'haha I know of him',\n",
       "   'reactions': [{'reaction': 'ð\\x9f\\x98®', 'actor': 'Vaughn Parker'}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578254178373,\n",
       "   'photos': [{'uri': 'messages/inbox/VaughnParker_JbI8DaiAXw/photos/81517947_672880593249469_253976676231282688_n_672880569916138.jpg',\n",
       "     'creation_timestamp': 1578254177}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578254175729,\n",
       "   'content': 'Also do you know this man',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578254125531,\n",
       "   'content': 'I told my neighbor about you and I was like â\\x80\\x9che went to this school called Exeter idk if youâ\\x80\\x99ve heard of itâ\\x80\\x9d and he was like â\\x80\\x9chohoho of course I have heard of it, thatâ\\x80\\x99s like saying I go to a college called Harvard have you heard of itâ\\x80\\x9d',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578247528310,\n",
       "   'content': 'Lol wdym',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578247301225,\n",
       "   'content': 'U didnâ\\x80\\x99t tell me that',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578247298088,\n",
       "   'content': 'Araaish Exeter is a famous school',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578247097615,\n",
       "   'content': 'Not yet but I want to',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578239476698,\n",
       "   'content': \"I'm gonna try to get a head start\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578239452383,\n",
       "   'content': 'Did u study at all',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578239440898,\n",
       "   'content': '<3',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578239429677,\n",
       "   'content': 'yoooooo',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578239428452,\n",
       "   'content': 'Whatttt',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578239372348,\n",
       "   'content': \"Also I switched to 415 so we're math squad again\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1578238539738,\n",
       "   'content': 'Broooo',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578237231186,\n",
       "   'content': 'I got lucky w 173',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1578237216880,\n",
       "   'content': 'Broo',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577762430925,\n",
       "   'content': 'Yesss',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759973614,\n",
       "   'content': 'I also want to/probably should work on some independent projects soon',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759912330,\n",
       "   'content': 'okk gotcha',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759888779,\n",
       "   'content': 'Itâ\\x80\\x99s click and drag tho itâ\\x80\\x99s ez',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759882994,\n",
       "   'content': 'I mean itâ\\x80\\x99s not really a template?',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759875984,\n",
       "   'content': 'Uhhh',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759874173,\n",
       "   'content': 'Just wix',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759823941,\n",
       "   'content': '*do you need html and css for wix or just templates',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759788491,\n",
       "   'content': 'I',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759785901,\n",
       "   'content': \"I'\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759772215,\n",
       "   'content': 'ð\\x9f\\x98³',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759755543,\n",
       "   'content': 'It was like $300 for 3 years I think',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759743883,\n",
       "   'content': 'nah :(',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759665633,\n",
       "   'content': 'was it a one time payment?',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759654380,\n",
       "   'content': 'hmm',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759643748,\n",
       "   'content': 'I wish there was a template but there isnâ\\x80\\x99t really',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759627491,\n",
       "   'content': 'Altho I originally bought it on godaddy bc they had a weird deal',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759615477,\n",
       "   'content': 'Wix* lol',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759612617,\n",
       "   'content': 'Wix and six',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577759607109,\n",
       "   'content': 'Ah hello good sir',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759377378,\n",
       "   'content': \"I'm gonna copy your good idea\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577759332500,\n",
       "   'content': 'hey buddy, what did you use to design your website, also what hosting service did you use?',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577290036388,\n",
       "   'content': 'Merry Christmas good buddy :)',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577281337902,\n",
       "   'content': 'Merry Christmas good sir',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1577281324298,\n",
       "   'sticker': {'uri': 'messages/stickers_used/39178562_1505197616293642_5411344281094848512_n_369239263222822.png'},\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1577266266537,\n",
       "   'content': 'https://youtu.be/uPOJ1PR50ag',\n",
       "   'share': {'link': 'https://www.youtube.com/watch?v=uPOJ1PR50ag'},\n",
       "   'type': 'Share'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1576367128540,\n",
       "   'content': 'oops this was supposed to go to the group',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1576367113043,\n",
       "   'photos': [{'uri': 'messages/inbox/VaughnParker_JbI8DaiAXw/photos/80559926_582473252325673_7256988601173409792_n_2557802280963180.jpg',\n",
       "     'creation_timestamp': 1576367112}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1576260970981,\n",
       "   'content': 'Thatâ\\x80\\x99s ur position buddy',\n",
       "   'reactions': [{'reaction': 'â\\x9d¤', 'actor': 'Araaish Paul'}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1576260963281,\n",
       "   'videos': [{'uri': 'messages/inbox/VaughnParker_JbI8DaiAXw/videos/video1576260963_589371628581394.mp4',\n",
       "     'creation_timestamp': 1576260959,\n",
       "     'thumbnail': {'uri': 'messages/inbox/VaughnParker_JbI8DaiAXw/videos/thumbnails/73498192_2543992149046916_4620259196962218130_n.jpg'}}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1568977856953,\n",
       "   'sticker': {'uri': 'messages/stickers_used/39178562_1505197616293642_5411344281094848512_n_369239263222822.png'},\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977854551,\n",
       "   'content': 'Iâ\\x80\\x99ll see u soon',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977851039,\n",
       "   'content': 'Hold on I live in PAR so I gotta leave rn if I want to get there ok time',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977822952,\n",
       "   'photos': [{'uri': 'messages/inbox/VaughnParker_JbI8DaiAXw/photos/68671785_1400819566748879_2213821367801872384_n_2279225418842906.jpg',\n",
       "     'creation_timestamp': 1568977822}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1568977820050,\n",
       "   'content': \"might consider the Olympics if this doesn't work out\",\n",
       "   'reactions': [{'reaction': 'ð\\x9f\\x98\\x86', 'actor': 'Vaughn Parker'}],\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1568977798474,\n",
       "   'content': \"I'm going for a 1:30 split personality\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977786201,\n",
       "   'content': 'Me too what a coincidence',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977780739,\n",
       "   'content': 'Yessss',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1568977776814,\n",
       "   'content': 'Getting ready for this 4kkkkk',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977771652,\n",
       "   'content': 'What are you doing up so early ð\\x9f\\x98´',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977762140,\n",
       "   'content': \"What's up?\",\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Araaish Paul',\n",
       "   'timestamp_ms': 1568977759109,\n",
       "   'content': 'Yo',\n",
       "   'type': 'Generic'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977743892,\n",
       "   'content': 'Vaughn is waving at you!',\n",
       "   'type': 'Share'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977743600,\n",
       "   'content': 'Vaughn is waving at you!',\n",
       "   'type': 'Share'},\n",
       "  {'sender_name': 'Vaughn Parker',\n",
       "   'timestamp_ms': 1568977743224,\n",
       "   'content': 'Vaughn is waving at you!',\n",
       "   'type': 'Share'}],\n",
       " 'title': 'Vaughn Parker',\n",
       " 'is_still_participant': True,\n",
       " 'thread_type': 'Regular',\n",
       " 'thread_path': 'inbox/VaughnParker_JbI8DaiAXw'}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chat_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages = pd.DataFrame(chat_history['messages'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_time(timestamp):\n",
    "    return pd.to_datetime(timestamp, unit='ms')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages['date'] = messages['timestamp_ms'].apply(convert_time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sender_name</th>\n",
       "      <th>timestamp_ms</th>\n",
       "      <th>content</th>\n",
       "      <th>type</th>\n",
       "      <th>reactions</th>\n",
       "      <th>photos</th>\n",
       "      <th>sticker</th>\n",
       "      <th>share</th>\n",
       "      <th>videos</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255103885</td>\n",
       "      <td>Not personally</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:43.885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255100022</td>\n",
       "      <td>haha I know of him</td>\n",
       "      <td>Generic</td>\n",
       "      <td>[{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:40.022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254178373</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:18.373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254175729</td>\n",
       "      <td>Also do you know this man</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:15.729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254125531</td>\n",
       "      <td>I told my neighbor about you and I was like â...</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:55:25.531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>58</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977762140</td>\n",
       "      <td>What's up?</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:22.140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>59</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1568977759109</td>\n",
       "      <td>Yo</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:19.109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743892</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743600</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>62</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743224</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.224</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      sender_name   timestamp_ms  \\\n",
       "0    Araaish Paul  1578255103885   \n",
       "1    Araaish Paul  1578255100022   \n",
       "2   Vaughn Parker  1578254178373   \n",
       "3   Vaughn Parker  1578254175729   \n",
       "4   Vaughn Parker  1578254125531   \n",
       "..            ...            ...   \n",
       "58  Vaughn Parker  1568977762140   \n",
       "59   Araaish Paul  1568977759109   \n",
       "60  Vaughn Parker  1568977743892   \n",
       "61  Vaughn Parker  1568977743600   \n",
       "62  Vaughn Parker  1568977743224   \n",
       "\n",
       "                                              content     type  \\\n",
       "0                                      Not personally  Generic   \n",
       "1                                  haha I know of him  Generic   \n",
       "2                                                 NaN  Generic   \n",
       "3                           Also do you know this man  Generic   \n",
       "4   I told my neighbor about you and I was like â...  Generic   \n",
       "..                                                ...      ...   \n",
       "58                                         What's up?  Generic   \n",
       "59                                                 Yo  Generic   \n",
       "60                           Vaughn is waving at you!    Share   \n",
       "61                           Vaughn is waving at you!    Share   \n",
       "62                           Vaughn is waving at you!    Share   \n",
       "\n",
       "                                           reactions  \\\n",
       "0                                                NaN   \n",
       "1   [{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "..                                               ...   \n",
       "58                                               NaN   \n",
       "59                                               NaN   \n",
       "60                                               NaN   \n",
       "61                                               NaN   \n",
       "62                                               NaN   \n",
       "\n",
       "                                               photos sticker share videos  \\\n",
       "0                                                 NaN     NaN   NaN    NaN   \n",
       "1                                                 NaN     NaN   NaN    NaN   \n",
       "2   [{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...     NaN   NaN    NaN   \n",
       "3                                                 NaN     NaN   NaN    NaN   \n",
       "4                                                 NaN     NaN   NaN    NaN   \n",
       "..                                                ...     ...   ...    ...   \n",
       "58                                                NaN     NaN   NaN    NaN   \n",
       "59                                                NaN     NaN   NaN    NaN   \n",
       "60                                                NaN     NaN   NaN    NaN   \n",
       "61                                                NaN     NaN   NaN    NaN   \n",
       "62                                                NaN     NaN   NaN    NaN   \n",
       "\n",
       "                      date  \n",
       "0  2020-01-05 20:11:43.885  \n",
       "1  2020-01-05 20:11:40.022  \n",
       "2  2020-01-05 19:56:18.373  \n",
       "3  2020-01-05 19:56:15.729  \n",
       "4  2020-01-05 19:55:25.531  \n",
       "..                     ...  \n",
       "58 2019-09-20 11:09:22.140  \n",
       "59 2019-09-20 11:09:19.109  \n",
       "60 2019-09-20 11:09:03.892  \n",
       "61 2019-09-20 11:09:03.600  \n",
       "62 2019-09-20 11:09:03.224  \n",
       "\n",
       "[63 rows x 10 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('1970-01-19 06:24:15.103885')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_month(date):\n",
    "    return date.month\n",
    "def get_year(date):\n",
    "    return date.year\n",
    "messages['month'] = messages['date'].apply(get_month)\n",
    "messages['year'] = messages['date'].apply(get_year)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sender_name</th>\n",
       "      <th>timestamp_ms</th>\n",
       "      <th>content</th>\n",
       "      <th>type</th>\n",
       "      <th>reactions</th>\n",
       "      <th>photos</th>\n",
       "      <th>sticker</th>\n",
       "      <th>share</th>\n",
       "      <th>videos</th>\n",
       "      <th>date</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255103885</td>\n",
       "      <td>Not personally</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:43.885</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255100022</td>\n",
       "      <td>haha I know of him</td>\n",
       "      <td>Generic</td>\n",
       "      <td>[{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:40.022</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254178373</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:18.373</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254175729</td>\n",
       "      <td>Also do you know this man</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:15.729</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254125531</td>\n",
       "      <td>I told my neighbor about you and I was like â...</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:55:25.531</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>58</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977762140</td>\n",
       "      <td>What's up?</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:22.140</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>59</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1568977759109</td>\n",
       "      <td>Yo</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:19.109</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743892</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.892</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743600</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.600</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>62</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743224</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.224</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      sender_name   timestamp_ms  \\\n",
       "0    Araaish Paul  1578255103885   \n",
       "1    Araaish Paul  1578255100022   \n",
       "2   Vaughn Parker  1578254178373   \n",
       "3   Vaughn Parker  1578254175729   \n",
       "4   Vaughn Parker  1578254125531   \n",
       "..            ...            ...   \n",
       "58  Vaughn Parker  1568977762140   \n",
       "59   Araaish Paul  1568977759109   \n",
       "60  Vaughn Parker  1568977743892   \n",
       "61  Vaughn Parker  1568977743600   \n",
       "62  Vaughn Parker  1568977743224   \n",
       "\n",
       "                                              content     type  \\\n",
       "0                                      Not personally  Generic   \n",
       "1                                  haha I know of him  Generic   \n",
       "2                                                 NaN  Generic   \n",
       "3                           Also do you know this man  Generic   \n",
       "4   I told my neighbor about you and I was like â...  Generic   \n",
       "..                                                ...      ...   \n",
       "58                                         What's up?  Generic   \n",
       "59                                                 Yo  Generic   \n",
       "60                           Vaughn is waving at you!    Share   \n",
       "61                           Vaughn is waving at you!    Share   \n",
       "62                           Vaughn is waving at you!    Share   \n",
       "\n",
       "                                           reactions  \\\n",
       "0                                                NaN   \n",
       "1   [{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "..                                               ...   \n",
       "58                                               NaN   \n",
       "59                                               NaN   \n",
       "60                                               NaN   \n",
       "61                                               NaN   \n",
       "62                                               NaN   \n",
       "\n",
       "                                               photos sticker share videos  \\\n",
       "0                                                 NaN     NaN   NaN    NaN   \n",
       "1                                                 NaN     NaN   NaN    NaN   \n",
       "2   [{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...     NaN   NaN    NaN   \n",
       "3                                                 NaN     NaN   NaN    NaN   \n",
       "4                                                 NaN     NaN   NaN    NaN   \n",
       "..                                                ...     ...   ...    ...   \n",
       "58                                                NaN     NaN   NaN    NaN   \n",
       "59                                                NaN     NaN   NaN    NaN   \n",
       "60                                                NaN     NaN   NaN    NaN   \n",
       "61                                                NaN     NaN   NaN    NaN   \n",
       "62                                                NaN     NaN   NaN    NaN   \n",
       "\n",
       "                      date  month  year  \n",
       "0  2020-01-05 20:11:43.885      1  2020  \n",
       "1  2020-01-05 20:11:40.022      1  2020  \n",
       "2  2020-01-05 19:56:18.373      1  2020  \n",
       "3  2020-01-05 19:56:15.729      1  2020  \n",
       "4  2020-01-05 19:55:25.531      1  2020  \n",
       "..                     ...    ...   ...  \n",
       "58 2019-09-20 11:09:22.140      9  2019  \n",
       "59 2019-09-20 11:09:19.109      9  2019  \n",
       "60 2019-09-20 11:09:03.892      9  2019  \n",
       "61 2019-09-20 11:09:03.600      9  2019  \n",
       "62 2019-09-20 11:09:03.224      9  2019  \n",
       "\n",
       "[63 rows x 12 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk\n",
    "from nltk.sentiment.vader import SentimentIntensityAnalyzer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package vader_lexicon to\n",
      "[nltk_data]     /Users/araaishpaul/nltk_data...\n",
      "[nltk_data]   Package vader_lexicon is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk.download('vader_lexicon')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "sentiment_analyzer = SentimentIntensityAnalyzer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'neg': 0.0, 'neu': 0.0, 'pos': 1.0, 'compound': 0.5719}"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sentiment_analyzer.polarity_scores('happy')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_polarity(text):\n",
    "    return sentiment_analyzer.polarity_scores(str(text))['compound']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "messages['sentiment'] = messages['content'].apply(get_polarity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sender_name</th>\n",
       "      <th>timestamp_ms</th>\n",
       "      <th>content</th>\n",
       "      <th>type</th>\n",
       "      <th>reactions</th>\n",
       "      <th>photos</th>\n",
       "      <th>sticker</th>\n",
       "      <th>share</th>\n",
       "      <th>videos</th>\n",
       "      <th>date</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255103885</td>\n",
       "      <td>Not personally</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:43.885</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1578255100022</td>\n",
       "      <td>haha I know of him</td>\n",
       "      <td>Generic</td>\n",
       "      <td>[{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 20:11:40.022</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>0.4588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254178373</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:18.373</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254175729</td>\n",
       "      <td>Also do you know this man</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:56:15.729</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1578254125531</td>\n",
       "      <td>I told my neighbor about you and I was like â...</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020-01-05 19:55:25.531</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>0.7269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>58</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977762140</td>\n",
       "      <td>What's up?</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:22.140</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>59</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1568977759109</td>\n",
       "      <td>Yo</td>\n",
       "      <td>Generic</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:19.109</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743892</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.892</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743600</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.600</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>62</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1568977743224</td>\n",
       "      <td>Vaughn is waving at you!</td>\n",
       "      <td>Share</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2019-09-20 11:09:03.224</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      sender_name   timestamp_ms  \\\n",
       "0    Araaish Paul  1578255103885   \n",
       "1    Araaish Paul  1578255100022   \n",
       "2   Vaughn Parker  1578254178373   \n",
       "3   Vaughn Parker  1578254175729   \n",
       "4   Vaughn Parker  1578254125531   \n",
       "..            ...            ...   \n",
       "58  Vaughn Parker  1568977762140   \n",
       "59   Araaish Paul  1568977759109   \n",
       "60  Vaughn Parker  1568977743892   \n",
       "61  Vaughn Parker  1568977743600   \n",
       "62  Vaughn Parker  1568977743224   \n",
       "\n",
       "                                              content     type  \\\n",
       "0                                      Not personally  Generic   \n",
       "1                                  haha I know of him  Generic   \n",
       "2                                                 NaN  Generic   \n",
       "3                           Also do you know this man  Generic   \n",
       "4   I told my neighbor about you and I was like â...  Generic   \n",
       "..                                                ...      ...   \n",
       "58                                         What's up?  Generic   \n",
       "59                                                 Yo  Generic   \n",
       "60                           Vaughn is waving at you!    Share   \n",
       "61                           Vaughn is waving at you!    Share   \n",
       "62                           Vaughn is waving at you!    Share   \n",
       "\n",
       "                                           reactions  \\\n",
       "0                                                NaN   \n",
       "1   [{'reaction': 'ð®', 'actor': 'Vaughn Parker'}]   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "..                                               ...   \n",
       "58                                               NaN   \n",
       "59                                               NaN   \n",
       "60                                               NaN   \n",
       "61                                               NaN   \n",
       "62                                               NaN   \n",
       "\n",
       "                                               photos sticker share videos  \\\n",
       "0                                                 NaN     NaN   NaN    NaN   \n",
       "1                                                 NaN     NaN   NaN    NaN   \n",
       "2   [{'uri': 'messages/inbox/VaughnParker_JbI8DaiA...     NaN   NaN    NaN   \n",
       "3                                                 NaN     NaN   NaN    NaN   \n",
       "4                                                 NaN     NaN   NaN    NaN   \n",
       "..                                                ...     ...   ...    ...   \n",
       "58                                                NaN     NaN   NaN    NaN   \n",
       "59                                                NaN     NaN   NaN    NaN   \n",
       "60                                                NaN     NaN   NaN    NaN   \n",
       "61                                                NaN     NaN   NaN    NaN   \n",
       "62                                                NaN     NaN   NaN    NaN   \n",
       "\n",
       "                      date  month  year  sentiment  \n",
       "0  2020-01-05 20:11:43.885      1  2020     0.0000  \n",
       "1  2020-01-05 20:11:40.022      1  2020     0.4588  \n",
       "2  2020-01-05 19:56:18.373      1  2020     0.0000  \n",
       "3  2020-01-05 19:56:15.729      1  2020     0.0000  \n",
       "4  2020-01-05 19:55:25.531      1  2020     0.7269  \n",
       "..                     ...    ...   ...        ...  \n",
       "58 2019-09-20 11:09:22.140      9  2019     0.0000  \n",
       "59 2019-09-20 11:09:19.109      9  2019     0.0000  \n",
       "60 2019-09-20 11:09:03.892      9  2019     0.0000  \n",
       "61 2019-09-20 11:09:03.600      9  2019     0.0000  \n",
       "62 2019-09-20 11:09:03.224      9  2019     0.0000  \n",
       "\n",
       "[63 rows x 13 columns]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>timestamp_ms</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sender_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1.576120e+12</td>\n",
       "      <td>7.880000</td>\n",
       "      <td>2019.320000</td>\n",
       "      <td>0.117248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1.575399e+12</td>\n",
       "      <td>8.315789</td>\n",
       "      <td>2019.263158</td>\n",
       "      <td>0.081429</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               timestamp_ms     month         year  sentiment\n",
       "sender_name                                                  \n",
       "Araaish Paul   1.576120e+12  7.880000  2019.320000   0.117248\n",
       "Vaughn Parker  1.575399e+12  8.315789  2019.263158   0.081429"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "messages.groupby('sender_name').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "year_month = messages.groupby(['month', 'year', 'sender_name']).mean().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>sender_name</th>\n",
       "      <th>timestamp_ms</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1.578244e+12</td>\n",
       "      <td>0.162725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1.578246e+12</td>\n",
       "      <td>0.108160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1.568978e+12</td>\n",
       "      <td>0.072240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>2019</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1.568978e+12</td>\n",
       "      <td>0.025510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>2019</td>\n",
       "      <td>Araaish Paul</td>\n",
       "      <td>1.577680e+12</td>\n",
       "      <td>0.105683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>2019</td>\n",
       "      <td>Vaughn Parker</td>\n",
       "      <td>1.577385e+12</td>\n",
       "      <td>0.097644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   month  year    sender_name  timestamp_ms  sentiment\n",
       "0      1  2020   Araaish Paul  1.578244e+12   0.162725\n",
       "1      1  2020  Vaughn Parker  1.578246e+12   0.108160\n",
       "2      9  2019   Araaish Paul  1.568978e+12   0.072240\n",
       "3      9  2019  Vaughn Parker  1.568978e+12   0.025510\n",
       "4     12  2019   Araaish Paul  1.577680e+12   0.105683\n",
       "5     12  2019  Vaughn Parker  1.577385e+12   0.097644"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "year_month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "araaish = year_month[year_month['sender_name'] == 'Araaish Paul']['sentiment'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.162725  , 0.07224   , 0.10568333])"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "araaish"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "vaughn = year_month[year_month['sender_name']=='Vaughn Parker']['sentiment'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.10816   , 0.02551   , 0.09764444])"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vaughn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1a29b5b790>"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=[20,10])\n",
    "plt.plot(araaish,label='Araaish')\n",
    "plt.plot(vaughn,label='Vaughn')\n",
    "plt.legend()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
